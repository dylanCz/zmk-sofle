#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp EXCL      &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp UP_ARROW     &kp CARET      &kp AMPERSAND  &kp ASTERISK  &kp MINUS  &kp EQUAL   &kp BACKSPACE
&kp TAB     &kp Q         &kp W        &kp E     &kp R       &kp T          &kp DOWN_ARROW   &kp Y          &kp U          &kp I         &kp O      &kp P       &kp BSLH
&kp LCTRL   &kp A         &kp S        &kp D     &kp F       &kp G          &kp LEFT_ARROW   &kp H          &kp J          &kp K         &kp L      &kp SEMI    &kp APOS
&kp LSHFT   &kp Z         &kp X        &kp C     &kp V       &kp B          &kp RIGHT_ARROW  &kp N          &kp M          &kp COMMA     &kp DOT    &kp FSLH    &kp GRAVE
&kp C_MUTE  &kp LEFT_ALT  &mo 2        &mo 1     &kp SPACE   &kp ENTER      &kp ENTER        &kp BACKSPACE  &kp ENTER      &mo 1         &mo 2      &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1    &kp F2    &kp F3       &kp F4         &kp F5              &mmv MOVE_UP     &kp F6             &kp F7    &kp F8    &kp F9       &kp F10        &none
&trans      &kp HOME  &kp END   &kp PAGE_UP  &kp PAGE_DOWN  &kp LEFT_BRACE      &mmv MOVE_DOWN   &kp RIGHT_BRACE    &kp HOME  &kp END   &kp PAGE_UP  &kp PAGE_DOWN  &none
&trans      &kp LEFT  &kp DOWN  &kp UP       &kp RIGHT      &kp LPAR            &mmv MOVE_LEFT   &kp RPAR           &kp LEFT  &kp DOWN  &kp UP       &kp RIGHT      &none
&none       &none     &none     &none        &none          &kp LEFT_BRACKET    &mmv MOVE_RIGHT  &kp RIGHT_BRACKET  &none     &none     &none        &none          &none
&kp C_MUTE  &trans    &trans    &trans       &trans         &trans              &mkp LCLK        &trans             &trans    &trans    &trans       &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &none      &none         &none         &none         &none           &mmv MOVE_UP     &none         &none         &none         &none         &none      &trans
&trans  &kp SLASH  &kp N9        &kp N8        &kp N7        &kp ASTERISK    &mmv MOVE_DOWN   &kp ASTERISK  &kp N7        &kp N8        &kp N9        &kp SLASH  &trans
&trans  &kp MINUS  &kp NUMBER_6  &kp N5        &kp NUMBER_4  &kp PLUS        &mmv MOVE_LEFT   &kp PLUS      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &trans
&trans  &kp EQUAL  &kp NUMBER_3  &kp NUMBER_2  &kp NUMBER_1  &kp EQUAL       &mmv MOVE_RIGHT  &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &trans
&trans  &trans     &trans        &kp N0        &trans        &trans          &mkp LCLK        &trans        &trans        &kp N0        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
